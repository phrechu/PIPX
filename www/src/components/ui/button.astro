---
import { cn } from '@/lib/utils'
import { cva } from 'class-variance-authority'

interface Props {
  class?: string
  variant?: 'default' | 'link'
  rounded?: 'default' | 'sm' | 'md' | 'lg' | 'xl' | 'none' | 'full'
  size?: 'default' | 'sm' | 'xs' | 'md' | 'lg'
  href?: string
  isBlank?: boolean
  id?: string
}

const {
  class: className,
  variant,
  rounded,
  size,
  href,
  isBlank,
  id,
  ...attrs
} = Astro.props as Props

const buttonVariants = cva(
  'inline-flex items-center justify-center font-medium transition-colors gap-2 focus-visible:shadow-[unset] focus-visible:outline-offset-8 focus-visible:outline-2 focus-visible:outline-white focus-visible:outline-dashed',
  {
    variants: {
      variant: {
        default:
          'border-[var(--dark-green)] bg-[var(--dark-green)] font-semibold text-[var(--lime)] hover:text-shadow-[0_0_3rem_var(--lime)]',
        link: 'font-semibold hover:text-[var(--lime)]',
      },
      size: {
        default: 'px-6 py-2 text-2xl',
        xs: 'h-9 px-3 text-xs',
        sm: 'h-9 px-3 text-sm',
        md: 'px-8 py-2 text-md',
        lg: 'h-11 px-8 text-lg',
      },
      rounded: {
        default: 'rounded-full',
        sm: 'rounded-sm',
        md: 'rounded-md',
        lg: 'rounded-lg',
        xl: 'rounded-xl',
        none: 'rounded-none',
        full: 'rounded-full',
      },
    },
    defaultVariants: {
      variant: 'default',
      size: 'default',
      rounded: 'default',
    },
  }
)
---

{
  href ? (
    <a
      href={href}
      class={cn(buttonVariants({ variant, size, rounded, className }))}
      {...attrs}
      target={isBlank ? '_blank' : undefined}
      rel={isBlank ? 'noopener noreferrer' : undefined}
    >
      <slot />
    </a>
  ) : (
    <button class={cn(buttonVariants({ variant, size, rounded, className }))} {...attrs}>
      <slot />
    </button>
  )
}
